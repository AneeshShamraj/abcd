import java.io.*;
import java.net.*;
public class Server {
public static void main(String[] args) {
try {
ServerSocket ss = new ServerSocket(6969);
Socket s = ss.accept();
DataInputStream dis = new DataInputStream(s.getInputStream());
DataOutputStream dout = new
DataOutputStream(s.getOutputStream());
String str = (String) dis.readUTF(), reverse = "";
System.out.println("Performing operations....");
int len = str.length();
for (int i = len - 1; i >= 0; i--)
reverse = reverse + str.charAt(i);
if (str.equals(reverse))
dout.writeUTF("Palindrome");
else
dout.writeUTF("Not a palindrome");
System.out.println("Response sent");
dout.flush();
dout.close();
ss.close();
} catch (Exception e) {
System.out.println(e);
}
}
}
Client Side code
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.net.Socket;
import java.util.Scanner;
public class Client {
public static void main(String[] args) {
try{
Scanner sc = new Scanner(System.in);
Socket s = new Socket("localhost", 6969);
DataOutputStream dout = new
DataOutputStream(s.getOutputStream());
DataInputStream din = new DataInputStream(s.getInputStream());
System.out.print("Enter string: ");
String str = sc.nextLine();
dout.writeUTF(str);
System.out.println("Server says: " + din.readUTF());
dout.flush();
dout.close();
s.close();
sc.close();
} catch(Exception e){
System.out.println(e);
}
}
}
